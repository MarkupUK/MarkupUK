fil = new Array();
fil["0"]= "Syd_selector_regex.html@@@Validating selector@@@I needed a way to validate that the value of tei:rendition/@selector was a proper CSS3 selector. So I wrote a regular expression to do so. An 18,385-character-long regular expression. And it seems to work...";
fil["1"]= "adaptive-filtering.html@@@Adaptive Filtering@@@...";
fil["2"]= "adept.html@@@ADEPT\u00A0\u00A0\u2717@@@...";
fil["3"]= "ae.html@@@Author/Editor\u00A0\u00A0\u2611@@@...";
fil["4"]= "apas01.html@@@The DTD used in the sample document@@@...";
fil["5"]= "apas02.html@@@The SGML Declaration used for the sample document@@@...";
fil["6"]= "apc.html@@@Appendix A - Subcheck artifacts with TTML examples@@@...";
fil["7"]= "application-implementation.html@@@Application Implementation@@@...";
fil["8"]= "ar01.html@@@Beyond the brick, for the past in the future, you find the archive!@@@The statement that XML is dead[1] is as wrong as celebrating Christmas on midsummer night\u2019s eve! At least in our opinion. Imagine making an archival soup based on international standards using XML, with one municipal archive, two regional archives, five national archives and the European Commission\u2019s eArchiving Building block thrown into the mix. This is what we are going to attempt, let us set the stage and take you through the recipe! [1]https://developpaper.com/is-xml-dead/ is a starting point for getting more information regarding the statment...";
fil["9"]= "ar01s01.html@@@Archives@@@...";
fil["10"]= "ar01s02.html@@@Building Blocks@@@...";
fil["11"]= "ar01s03.html@@@eArchiving Building Block@@@...";
fil["12"]= "ar01s04.html@@@Long-term preservation of information@@@...";
fil["13"]= "ar01s05.html@@@Use cases@@@...";
fil["14"]= "ar01s06.html@@@Skill set@@@...";
fil["15"]= "ar01s07.html@@@Standards, de facto standards and specifications@@@...";
fil["16"]= "ar01s08.html@@@eArchiving Building block Specifications@@@...";
fil["17"]= "ar01s09.html@@@The eArchiving reference model setting@@@...";
fil["18"]= "ar01s10.html@@@Content specifications@@@...";
fil["19"]= "ar01s11.html@@@Basic soup recipe with a twist@@@...";
fil["20"]= "ar01s12.html@@@Conclusion: Moving on from soup@@@...";
fil["21"]= "ar02.html@@@Software we have lost@@@Since the first days of SGML, there has been a variety of software to parse, validate, analyse, format, store, search, and extract the information. Some of this was what we now call Open Source, particularly the smaller utilities, but the majority of applications were conventional commercial offerings. In the course of time, many of these have become unavailable, for assorted reasons, with the result is that some very useful systems have been lost, and replacements are not always as effective. This research attempts to catalogue and analyse a collection of XML and SGML software that is either off the market, or only available within a different product, and thus not accessible to users. The objective is to see if there are still ways to shorten the distance between the bricks that are not otherwise provided for...";
fil["22"]= "ar02s02s01s03.html@@@sgmls\u00A0\u00A0\u2611@@@...";
fil["23"]= "ar02s02s02.html@@@Editors@@@...";
fil["24"]= "ar02s02s02s09.html@@@WordPerfect+SGML\u00A0\u00A0\u2611@@@...";
fil["25"]= "ar02s02s03s05.html@@@Microsoft SGML Author for Word\u00A0\u00A0\u2717@@@...";
fil["26"]= "ar02s02s05.html@@@Other software@@@...";
fil["27"]= "ar02s03.html@@@Conclusions@@@...";
fil["28"]= "ar02s03s01.html@@@Some stuff has been gained.@@@...";
fil["29"]= "ar02s03s02.html@@@Some stuff has been lost.@@@...";
fil["30"]= "ar03.html@@@xprocedit, A Browser-Based Open-Source XProc Editor@@@A visual XProc editor can serve at least two purposes: Communicating the process flow to non-programmers and easing the notoriously steep learning curve for programmers. An implementation using the Javascript framework JointJS and the in-browser XSLT\u00A03 processor Saxon-JS is demonstrated, along with the challenges of supporting XProc\u2019s peculiarities in a generic graph editing framework...";
fil["31"]= "ar03s01.html@@@Introduction@@@...";
fil["32"]= "ar03s03.html@@@Selecting a Graph Editing Framework@@@...";
fil["33"]= "ar03s05.html@@@Other Visual XProc Editors@@@...";
fil["34"]= "ar03s07.html@@@Conclusion@@@...";
fil["35"]= "ar04.html@@@Generating documents from XQuery annotations@@@The paper describes an implementation of an xqDoc.org documentation generator. A focus of this implementation is XQuery annotation support. In 2014, the xqDoc schema was updated to include markup to capture XQuery annotations; however, existing renderers have often not been updated to make use of this. A major driver for annotation support is documenting XQuery web applications built using the RESTXQ standard. RESTXQ defines a standard set of XQuery annotations that can be used to define RESTful Web Services from XQuery. Annotations are also being used to define frameworks for unit testing, user permissioning and web socket interfaces. Annotations are code markup that the runtime environment may choose to use to wire-in additional external functionality to XQuery applications. The xqDocA implementation is open source. It is largely written in XQuery and runs with recent versions of BaseX. It generates static, standalone HTML5 and XML and JSON output. The included XQuery library modules can also be used to assist in the generation of other related documentation artefacts. In the case of RESTXQ, these could be the generation of openAPI (Swagger) and WADL documents...";
fil["36"]= "ar04s01.html@@@Introduction@@@...";
fil["37"]= "ar04s02.html@@@Annotations?@@@...";
fil["38"]= "ar04s02s01.html@@@What are annotations?@@@...";
fil["39"]= "ar04s02s02.html@@@Use of annotations in XQuery@@@...";
fil["40"]= "ar04s02s02s01.html@@@Built-in annotations@@@...";
fil["41"]= "ar04s02s02s02.html@@@RestXQ@@@...";
fil["42"]= "ar04s02s02s03.html@@@Unit testing@@@...";
fil["43"]= "ar04s02s02s04.html@@@Other applications@@@...";
fil["44"]= "ar04s03.html@@@XQuery documentation@@@...";
fil["45"]= "ar04s03s01.html@@@The xqDoc format@@@...";
fil["46"]= "ar04s03s02.html@@@Schema updates@@@...";
fil["47"]= "ar04s03s03.html@@@Working with xqDoc documents@@@...";
fil["48"]= "ar04s03s04.html@@@Components@@@...";
fil["49"]= "ar04s03s05.html@@@XqDoc implementations@@@...";
fil["50"]= "ar04s03s06.html@@@Parsers@@@...";
fil["51"]= "ar04s04.html@@@Introducing xqDocA@@@...";
fil["52"]= "ar04s04s01.html@@@Overview@@@...";
fil["53"]= "ar04s04s01s01.html@@@Renderers@@@...";
fil["54"]= "ar04s04s02.html@@@Implementation@@@...";
fil["55"]= "ar04s04s03.html@@@Sample outputs@@@...";
fil["56"]= "ar04s04s04.html@@@Customisation@@@...";
fil["57"]= "ar04s05.html@@@Conclusions@@@...";
fil["58"]= "ar05.html@@@XQuery for Data Workers@@@With some extensions, XQuery can be used to program Data Workers to manipulate data in various formats and in different environments...";
fil["59"]= "ar05s01.html@@@Introduction@@@...";
fil["60"]= "ar05s02.html@@@Requirements@@@...";
fil["61"]= "ar05s03.html@@@Chosen environment@@@...";
fil["62"]= "ar05s03s01.html@@@NodeJS@@@...";
fil["63"]= "ar05s03s02.html@@@Browsers@@@...";
fil["64"]= "ar05s03s03.html@@@XQuery@@@...";
fil["65"]= "ar05s04.html@@@Fleur: an XQuery implementation in Javascript@@@...";
fil["66"]= "ar05s05.html@@@Development and tests@@@...";
fil["67"]= "ar05s06.html@@@Extensions@@@...";
fil["68"]= "ar05s06s01.html@@@The generalized doc() and serialize() functions@@@...";
fil["69"]= "ar05s06s02.html@@@Two-dimensional sequences for tabular data@@@...";
fil["70"]= "ar05s06s03.html@@@Function Modules@@@...";
fil["71"]= "ar05s06s04.html@@@Server-side evaluation@@@...";
fil["72"]= "ar05s06s05.html@@@Client-side evaluation@@@...";
fil["73"]= "ar05s07.html@@@Examples of Data Workers with Fleur@@@...";
fil["74"]= "ar05s07s01.html@@@Bank statements converted into CSV files@@@...";
fil["75"]= "ar05s07s02.html@@@IT Inventory dashboards@@@...";
fil["76"]= "ar05s07s03.html@@@XLSForm to XSLTForms@@@...";
fil["77"]= "ar05s07s04.html@@@Collecting from network equipments@@@...";
fil["78"]= "ar05s07s05.html@@@XForms 2.0 Test Suite for XSLTForms@@@...";
fil["79"]= "ar05s07s06.html@@@Updating users accounts from HR software@@@...";
fil["80"]= "ar05s08.html@@@Conclusion@@@...";
fil["81"]= "ar06.html@@@subcheck Article MarkupUK London@@@The exchange of data in XML goes hand in hand with its validation. Mature technologies for this task exist. But often more is needed than just the technical application of XML Schema, Schematron or Relax NG. A user-friendly solution requires an abstraction from the XML foundation. Initiation and result of a validating process needs to be put into the context of the end users domain and be a guidance to solve conformance problems. This paper shows how Schematron, XSLT, XQuery and JavaScript have been glued together to address these requirements. Although the subcheck framework (http://subcheck.io) was implemented specifically for the Timed Text Markup Language (TTML) the approach can be used by any other XML vocabulary...";
fil["82"]= "ar07.html@@@An Improved diff3 Format for Changes and Conflicts in Tree Structures@@@There are some pieces of software, and some formats, that are de-facto standards and have been around for decades. One of these is the diff3 format for representing changes and conflicts in text documents. Diff3 works well for unstructured text documents that are divided into lines. It works surprisingly well for pretty-printed source code and similar documents. But it has frustrating limitations when used for XML or JSON or similar tree-based data formats. Can we improve on diff3 without making it too complicated? Can the existing representation of changes and conflicts be extended to handle tree-based data? This paper seeks to answer these questions and to describe how further benefits can be enjoyed by using XML or JSON as the basis for showing conflicts and changes...";
fil["83"]= "ar07s01.html@@@Introduction and Background@@@...";
fil["84"]= "ar07s02.html@@@How diff3 Delimits the Extent of Changes and Conflicts@@@...";
fil["85"]= "ar07s03s01.html@@@Representing XML Element Tag Change in diff3@@@...";
fil["86"]= "ar07s03s02.html@@@Representing XML Attribute Change in diff3@@@...";
fil["87"]= "ar07s03s03.html@@@Representing JSON Structure Change in diff3@@@...";
fil["88"]= "ar07s03s04.html@@@Representing JSON Separator Change in diff3@@@...";
fil["89"]= "ar07s04.html@@@diff3 Format as XML or JSON@@@...";
fil["90"]= "ar07s05.html@@@Nested Changes@@@...";
fil["91"]= "ar07s06.html@@@Conclusions@@@...";
fil["92"]= "ar08.html@@@&lt;Angle-brackets/&gt; on the Branch Line@@@As a retirement &apos;hobby&apos;, somewhat removed from the computing milieu, the author has started building a model railway in his garden. Surveying the extant tools for designing such layouts and finding them not quite right, he started building a design tool himself, using the familiar technologies of XSLT3 and SVG executing in a browser, employing Saxon-JS as the processing platform. By adding animations, the tool expanded beyond simple design to in effect become an active model train system. The results of this were demonstrated, with some success, at Markup UK in 2018. This paper describes the design of this tool in some detail, as well as possible developments since that demonstration...";
fil["93"]= "ar08s01.html@@@Introduction@@@...";
fil["94"]= "ar08s02.html@@@Overall Design@@@...";
fil["95"]= "ar08s03.html@@@Layout Topology and Geometry@@@...";
fil["96"]= "ar08s03s01.html@@@Representing the topology@@@...";
fil["97"]= "ar08s03s02.html@@@Computing the geometry@@@...";
fil["98"]= "ar08s04.html@@@Drawing pictures@@@...";
fil["99"]= "ar08s04s01.html@@@Isometric Views@@@...";
fil["100"]= "ar08s05.html@@@Interaction@@@...";
fil["101"]= "ar08s06.html@@@Animations@@@...";
fil["102"]= "ar08s07.html@@@Developments@@@...";
fil["103"]= "ar08s07s01.html@@@True 3D models and view rotation@@@...";
fil["104"]= "ar08s07s02.html@@@Collision detection, a.k.a. train crashes@@@...";
fil["105"]= "ar08s07s03.html@@@Difficulties@@@...";
fil["106"]= "ar08s08.html@@@Conclusion@@@...";
fil["107"]= "ar09.html@@@Taking Schematron QuickFix To The Next Level@@@The Schematron QuickFix (SQF) language can be used to improve efficiency and quality when editing XML documents. You can define actions that will add complex XML structure in your documents, make modifications in multiple places, or actions that will convert an XML structure into another. These changes are made by keeping the document structure valid and conforming to your project specification, and will help the content writer add content more easily and without making mistakes. To build complex actions, you can mix the Schematron QuickFix language with ISO Schematron, or with different versions of XSLT and XPath, or you can define your own extensions using programming languages such as Java. This means that you can perform modifications in multiple external documents, or display dialog boxes to get input from your users, or use complex algorithms for processing the content of the documents. The Schematron QuickFix is a modular language. Even though it is simple (it only has four types of operations that can be performed: add, delete, replace, and string replace), new types of operations can be created (such as wrap, unwrap, rename, or join). This can be implemented by using abstract quick fixes and by creating libraries of quick fixes that can be reused for various different XML vocabularies (such as DITA, DocBook. TEI). By using a library of quick fixes, it will help the Schematron QuickFix developers to create the actions more easily and reuse the quick fixes created by others. This presentation will focus on some interesting use-cases and Schematron QuickFix examples that can be easily adapted to your projects. The examples will include both abstract quick fixes and complex quick fixes that use XSLT and Java...";
fil["108"]= "ar09s01.html@@@Introduction@@@...";
fil["109"]= "ar09s02.html@@@Schematron QuickFix Language@@@...";
fil["110"]= "ar09s03.html@@@Use Cases@@@...";
fil["111"]= "ar09s03s01.html@@@Type of Users@@@...";
fil["112"]= "ar09s03s02.html@@@Generate Content Using XPath@@@...";
fil["113"]= "ar09s03s03.html@@@Change Text Using Regular Expressions@@@...";
fil["114"]= "ar09s03s04.html@@@Using XSLT to Generate Content@@@...";
fil["115"]= "ar09s03s05.html@@@Ignore Schematron Checks@@@...";
fil["116"]= "ar09s03s06.html@@@SQF User Input Dialog@@@...";
fil["117"]= "ar09s04.html@@@Abstract Quick Fixes@@@...";
fil["118"]= "ar09s05.html@@@Multilingual Support in SQF@@@...";
fil["119"]= "ar09s06.html@@@Generate Quick Fixes Dynamically@@@...";
fil["120"]= "ar09s07.html@@@Conclusion@@@...";
fil["121"]= "ar10.html@@@Accessibility Matters@@@XML, by itself, does not have any support for accessibility. XML is extremely flexible, but it needs to flex in the right directions if it is going to support the information necessary to make a document accessible. This is a guided tour of some of the features of the HTML, Web Content Accessibility Guidelines (WCAG), and PDF/UA (Universal Accessibility) standards. It concentrates on file formats rather than User Agent behaviour, since the information needed to make accessible HTML or PDF usually needs to be included in, or able to be inferred from, the source XML. However, it\u2019s rarely the raw XML that is presented to users. This paper also strays into some aspects of styling the content to make it more accessible...";
fil["122"]= "ar10s01.html@@@What is accessibility?@@@...";
fil["123"]= "ar10s02.html@@@Standards for accessibility@@@...";
fil["124"]= "ar10s03.html@@@Accessibility in, accessibility out@@@...";
fil["125"]= "ar10s04.html@@@HTML@@@...";
fil["126"]= "ar10s05.html@@@Tagged PDF@@@...";
fil["127"]= "ar10s05s01.html@@@Specialised PDF tags@@@...";
fil["128"]= "ar10s05s01s01.html@@@AH Formatter@@@...";
fil["129"]= "ar10s05s01s02.html@@@FOP@@@...";
fil["130"]= "ar10s05s01s03.html@@@XEP@@@...";
fil["131"]= "ar10s06s01.html@@@Matterhorn Protocol@@@...";
fil["132"]= "ar10s06s02.html@@@PAC 3 PDF/UA checker@@@...";
fil["133"]= "ar10s07.html@@@Common Structures@@@...";
fil["134"]= "ar10s07s01.html@@@Language indication@@@...";
fil["135"]= "ar10s07s01s01.html@@@HTTML@@@...";
fil["136"]= "ar10s07s02.html@@@Part, Article, Section, or Division@@@...";
fil["137"]= "ar10s07s03.html@@@Headings@@@...";
fil["138"]= "ar10s07s04.html@@@Table of Contents@@@...";
fil["139"]= "ar10s07s04s01.html@@@HTML@@@...";
fil["140"]= "ar10s07s04s02.html@@@Tagged PDF@@@...";
fil["141"]= "ar10s07s05.html@@@Index@@@...";
fil["142"]= "ar10s07s06.html@@@Footnote@@@...";
fil["143"]= "ar10s07s06s01.html@@@HTML@@@...";
fil["144"]= "ar10s07s06s02.html@@@Tagged PDF@@@...";
fil["145"]= "ar10s07s07.html@@@Endnote@@@...";
fil["146"]= "ar10s07s07s01.html@@@HTML@@@...";
fil["147"]= "ar10s07s07s02.html@@@Tagged PDF@@@...";
fil["148"]= "ar10s07s08.html@@@Tables@@@...";
fil["149"]= "ar10s07s08s01.html@@@HTML@@@...";
fil["150"]= "ar10s07s08s02.html@@@Tagged PDF and PDF/UA@@@...";
fil["151"]= "ar10s07s09.html@@@Icons, etc.@@@...";
fil["152"]= "ar10s07s09s01.html@@@Tagged PDF and PDF/UA@@@...";
fil["153"]= "ar10s07s10.html@@@Mathematics@@@...";
fil["154"]= "ar10s07s10s01.html@@@HTML@@@...";
fil["155"]= "ar10s07s10s02.html@@@Tagged PDF@@@...";
fil["156"]= "ar10s07s11.html@@@Citation@@@...";
fil["157"]= "ar10s07s11s01.html@@@HTML@@@...";
fil["158"]= "ar10s07s11s02.html@@@Tagged PDF@@@...";
fil["159"]= "ar10s07s12.html@@@Block quotation@@@...";
fil["160"]= "ar10s07s12s01.html@@@HTML@@@...";
fil["161"]= "ar10s07s12s02.html@@@Tagged PDF@@@...";
fil["162"]= "ar10s07s13.html@@@Inline quotation@@@...";
fil["163"]= "ar10s07s14.html@@@Inline code@@@...";
fil["164"]= "ar10s07s15.html@@@Bibliography@@@...";
fil["165"]= "ar10s08.html@@@Conclusion@@@...";
fil["166"]= "ar11.html@@@Scrap the App, Keep the Data@@@Whether by reacting swiftly to shifting market conditions and disruptive technologies or by growing through mergers and acquisitions, the ability to adapt is critical to success in the digital age. As business processes and workflows evolve, new technologies and systems are constantly introduced to support them. Over time, IT estates become fragmented, and the number of legacy systems increases year by year. Valuable data ends up in isolated silos, only accessible via otherwise unnecessary applications that are expensive to maintain and license or are approaching the end of life. This paper suggests a generic approach to transform arbitrary relational data into aggregated, hierarchical form and build a thin application to provide read access to end users. In my presentation, I would like to point out why the relational model falls short when it comes to data aggregation. XML can easily model both relational and hierarchical data. It&apos;s an excellent choice for data re-modeling and also for building a thin, data access application. The approach is based on experience from multiple projects. XML &quot;bricks&quot; used in the solution:processing pipeline configuration as XML (Apache Ant)XSLTXQueryXML database...";
fil["167"]= "ar11s01.html@@@Business issue@@@...";
fil["168"]= "ar11s01s01.html@@@Data archiving and application decommissioning@@@...";
fil["169"]= "ar11s01s02.html@@@Freeing up licenses@@@...";
fil["170"]= "ar11s01s03.html@@@Merging data silos@@@...";
fil["171"]= "ar11s02.html@@@Technical angle@@@...";
fil["172"]= "ar11s02s01.html@@@Relational data@@@...";
fil["173"]= "ar11s02s02.html@@@Hierarchical data@@@...";
fil["174"]= "ar11s03.html@@@Different paths to consider@@@...";
fil["175"]= "ar11s03s01.html@@@Use a proprietary connector@@@...";
fil["176"]= "ar11s03s02.html@@@Use the app&apos;s export/import functionality@@@...";
fil["177"]= "ar11s03s03.html@@@Export the data from the app&apos;s relational database and aggregate it into hierarchical XML records@@@...";
fil["178"]= "ar11s03s04.html@@@Export the data from the app&apos;s relational database, serialize and store it as relational XML records@@@...";
fil["179"]= "ar11s03s05.html@@@Data virtualization@@@...";
fil["180"]= "ar11s04.html@@@Implementation@@@...";
fil["181"]= "ar11s04s01.html@@@Execution framework@@@...";
fil["182"]= "ar11s04s02.html@@@Execution steps@@@...";
fil["183"]= "ar11s04s02s01.html@@@Export@@@...";
fil["184"]= "ar11s04s02s02.html@@@Transformation@@@...";
fil["185"]= "ar11s04s02s03.html@@@Aggregation@@@...";
fil["186"]= "ar11s05.html@@@Conclusion@@@...";
fil["187"]= "ar12.html@@@Documenting XML Structures@@@...";
fil["188"]= "ar12s01.html@@@Introduction@@@...";
fil["189"]= "ar12s01s01.html@@@About the author and his documenting experience@@@...";
fil["190"]= "ar12s02.html@@@Consumption: Understanding XML structures@@@...";
fil["191"]= "ar12s03.html@@@Production: Creating XML Structure documentation@@@...";
fil["192"]= "ar12s03s01.html@@@Schemas and documentation@@@...";
fil["193"]= "ar12s03s02.html@@@Writing documentation@@@...";
fil["194"]= "ar12s03s03.html@@@The target format and how to produce it@@@...";
fil["195"]= "ar12s03s04.html@@@XML element documentation@@@...";
fil["196"]= "ar12s03s05.html@@@An example tool-chain@@@...";
fil["197"]= "ar12s04.html@@@Conclusions and wrap-up@@@...";
fil["198"]= "ar13s01.html@@@Introduction@@@...";
fil["199"]= "ar13s02.html@@@Conference paper submission workflow@@@...";
fil["200"]= "ar13s02s01.html@@@Content creation@@@...";
fil["201"]= "ar13s02s02.html@@@Peer review@@@...";
fil["202"]= "ar13s02s03.html@@@Publishing@@@...";
fil["203"]= "ar13s03.html@@@XMLPaper architecture@@@...";
fil["204"]= "ar13s03s01.html@@@The source format@@@...";
fil["205"]= "ar13s03s02.html@@@Self-service project template@@@...";
fil["206"]= "ar13s03s03.html@@@Steady-state workflow@@@...";
fil["207"]= "ar13s03s04.html@@@Initial setup@@@...";
fil["208"]= "ar13s04.html@@@User experience analysis@@@...";
fil["209"]= "ar13s05.html@@@Similarities with other content creation workflows@@@...";
fil["210"]= "ar13s06.html@@@Conclusion@@@...";
fil["211"]= "ar14.html@@@Dispelling Myths About Markup Formats: When What Why Where@@@Misunderstandings about the goals and strengths of different document and data interchange formats can lead to suboptimal decisions. Such misunderstandings appear widespread. The purpose of this paper is to suggest areas in which each format has strengths, and to provide clear explanations that people can use to place XML in the context of other current markup systems. Common misconceptions about XML include statements such as \u201CXML was designed for Web services and therefore unsuitable for documents;\u201D \u201CXML was designed to replace HTML and has failed;\u201D \u201CXML cannot transmit semantics of any kind;\u201D \u201CXML is dead.\u201D In fact, XML is alive and well. There are misconceptions about other formats, too, of course...";
fil["212"]= "ar14s01.html@@@Introduction@@@...";
fil["213"]= "ar14s01s01.html@@@HTML: The HyperText Markup Language (HTML).@@@...";
fil["214"]= "ar14s02.html@@@Markdown@@@...";
fil["215"]= "ar14s03.html@@@RDF and Linked Data@@@...";
fil["216"]= "ar14s04.html@@@JavaScript Object Notation (JSON)@@@...";
fil["217"]= "ar14s05.html@@@JSON-LD: JSON meets RDF@@@...";
fil["218"]= "ar14s06.html@@@Portable Document Format (PDF)@@@...";
fil["219"]= "ar14s07.html@@@Domain-specific XML Vocabularies@@@...";
fil["220"]= "ar14s08.html@@@XHTML\u2122: The Extensible HyperText Markup Language@@@...";
fil["221"]= "ar14s09.html@@@DocBook@@@...";
fil["222"]= "ar14s10.html@@@Customizing DocBook: Mallard@@@...";
fil["223"]= "ar14s11.html@@@The Text Encoding Initiative (TEI)@@@...";
fil["224"]= "ar14s12.html@@@Open Document Format (ODF), OOXML@@@...";
fil["225"]= "ar14s13.html@@@Raster Images@@@...";
fil["226"]= "ar14s14.html@@@Conclusion@@@...";
fil["227"]= "ar15s01.html@@@Introduction@@@...";
fil["228"]= "ar15s02.html@@@Against all odds@@@...";
fil["229"]= "ar15s03.html@@@Writing the Regexp@@@...";
fil["230"]= "ar15s03s01.html@@@Generating the generator@@@...";
fil["231"]= "ar15s03s02.html@@@Case@@@...";
fil["232"]= "ar15s03s03.html@@@Language@@@...";
fil["233"]= "ar15s03s04.html@@@What the generator generated@@@...";
fil["234"]= "ar15s03s04s01.html@@@RELAX NG schema@@@...";
fil["235"]= "ar15s03s04s02.html@@@XSLT \u201Cschema\u201D@@@...";
fil["236"]= "ar15s04.html@@@Resources@@@...";
fil["237"]= "ar15s04s01.html@@@Time@@@...";
fil["238"]= "ar15s04s02.html@@@Memory@@@...";
fil["239"]= "ar15s04s03.html@@@Storage@@@...";
fil["240"]= "ar15s05.html@@@Future work@@@...";
fil["241"]= "ar15s06.html@@@Availability@@@...";
fil["242"]= "ar16.html@@@XSpec in the Cloud with Diamonds@@@Running XSpec tests in a development team is usually performed via a CI server/service. However, this comes with limitations related to the use of private repositories and to the cost and burden of administering CI servers. This paper describes an alternative approach for running XSpec tests from private repositories using a serverless architecture built on AWS Lambda. It describes the technical configuration and discusses the benefits, cost optimization, and constraints of a serverless architecture for running XSpec tests...";
fil["243"]= "ar16s01.html@@@Introduction@@@...";
fil["244"]= "ar16s02.html@@@AWS Lambda and Serverless Architecture@@@...";
fil["245"]= "ar16s03.html@@@Technical Configuration@@@...";
fil["246"]= "ar16s03s01.html@@@Linking Git to S3@@@...";
fil["247"]= "ar16s03s02.html@@@Lambda Configuration@@@...";
fil["248"]= "ar16s04s01.html@@@Benefits of Serverless Architecture@@@...";
fil["249"]= "ar16s04s02.html@@@Memory and Time Execution Constraints@@@...";
fil["250"]= "ar16s04s03.html@@@Cost Optimization@@@...";
fil["251"]= "ar16s04s04.html@@@Vendor Lock-in@@@...";
fil["252"]= "ar16s05.html@@@Conclusion@@@...";
fil["253"]= "arcsgml.html@@@ARC SGML\u00A0\u00A0\u25EF@@@...";
fil["254"]= "aspsgml.html@@@ASP SGML\u00A0\u00A0\u2717@@@...";
fil["255"]= "balise.html@@@Balise\u00A0\u00A0\u2717@@@...";
fil["256"]= "bg.html@@@Background@@@...";
fil["257"]= "bi02.html@@@Bibliography@@@...";
fil["258"]= "bi05.html@@@Bibliography@@@...";
fil["259"]= "bi07.html@@@References@@@...";
fil["260"]= "bi08.html@@@References@@@...";
fil["261"]= "bi14.html@@@Bibliography@@@...";
fil["262"]= "bug_fixes.html@@@Analysis and Discussion@@@...";
fil["263"]= "bunce-references.html@@@Bibliography@@@...";
fil["264"]= "compiled-schematron.html@@@Compiled Schematron@@@...";
fil["265"]= "conclusion.html@@@Conclusion@@@...";
fil["266"]= "cristian-references.html@@@Bibliography@@@...";
fil["267"]= "daphne.html@@@DAPHNE\u00A0\u00A0\u25A1@@@...";
fil["268"]= "darc.html@@@SGML Darc\u00A0\u00A0\u2611@@@...";
fil["269"]= "dbg.html@@@Rapid cyclic debugging@@@...";
fil["270"]= "dox2go.html@@@Software and documentation available@@@...";
fil["271"]= "dyna.html@@@DynaText\u00A0\u00A0\u2611@@@...";
fil["272"]= "emacspsgml.html@@@Emacs\u00A0+ psgml\u00A0\u00A0\u2611@@@...";
fil["273"]= "epcedit.html@@@epcedit\u00A0\u00A0\u2611@@@...";
fil["274"]= "format.html@@@Formatters, including browsers and servers@@@...";
fil["275"]= "frame.html@@@FrameMaker+SGML\u00A0\u00A0\u2717@@@...";
fil["276"]= "generation-of-the-report.html@@@Generation of the Report@@@...";
fil["277"]= "grif.html@@@GriF SGML Editor\u00A0\u00A0\u2717@@@...";
fil["278"]= "implementation-approach.html@@@Implementation Approach@@@...";
fil["279"]= "incon.html@@@InContext\u00A0\u00A0\u2611@@@...";
fil["280"]= "interfaces-machine-to-machine-and-the-end-user.html@@@Interfaces: Machine-to-Machine and the End-User@@@...";
fil["281"]= "intro.html@@@Intro@@@...";
fil["282"]= "karin-references.html@@@Bibliography@@@...";
fil["283"]= "ldbg.html@@@Logical@@@...";
fil["284"]= "liam-references.html@@@Bibliography@@@...";
fil["285"]= "marco-references.html@@@Bibliography@@@...";
fil["286"]= "master-thesis.html@@@Master Thesis@@@...";
fil["287"]= "mdppub.html@@@MultiDoc Pro Publisher\u00A0\u00A0\u2611@@@...";
fil["288"]= "mdpte.html@@@MultiDoc Pro Translating Editor\u00A0\u00A0\u2611@@@...";
fil["289"]= "nf.html@@@Near&Far Author for Word\u00A0\u00A0\u2717@@@...";
fil["290"]= "nfd.html@@@Near&Far Designer\u00A0\u00A0\u2611@@@...";
fil["291"]= "octavian-references.html@@@Bibliography@@@...";
fil["292"]= "om.html@@@Omnimark\u00A0\u00A0\u2611@@@...";
fil["293"]= "other-aspects-and-perspective.html@@@Other Aspects and Perspective@@@...";
fil["294"]= "outlook.html@@@Outlook@@@...";
fil["295"]= "overview-transformation-chain.html@@@Overview: The Transformation Chain@@@...";
fil["296"]= "oxygen-main.html@@@Markup UK 2019 Proceedings@@@...";
fil["297"]= "panopub.html@@@Panorama Publisher and Viewer\u00A0\u00A0\u2611@@@...";
fil["298"]= "parsers.html@@@Parsers and validators@@@...";
fil["299"]= "pat.html@@@PAT\u00A0\u00A0\u25A1@@@...";
fil["300"]= "pdbg.html@@@Practical@@@...";
fil["301"]= "pres.html@@@Preserving Well-Formed Tree Structure in diff3@@@...";
fil["302"]= "proc.html@@@Processors@@@...";
fil["303"]= "rules-documentation.html@@@Rules Documentation@@@...";
fil["304"]= "sampledoc.html@@@Sample SGML document@@@...";
fil["305"]= "schematron-schema-file.html@@@Schematron Schema File@@@...";
fil["306"]= "sec-pdfua.html@@@PDF/UA@@@...";
fil["307"]= "solution.html@@@Solution@@@...";
fil["308"]= "special.html@@@Why is XProc Special?@@@...";
fil["309"]= "sw.html@@@Software@@@...";
fil["310"]= "syd-references.html@@@Bibliography@@@...";
fil["311"]= "tai-references.html@@@Bibliography@@@...";
fil["312"]= "the-report-view.html@@@The Report View@@@...";
fil["313"]= "tony-references.html@@@Bibliography@@@...";
fil["314"]= "ttml-and-its-profiles.html@@@TTML and its Profiles@@@...";
fil["315"]= "using-the-application.html@@@Using the subcheck Application@@@...";
fil["316"]= "validation-of-ttml-profiles.html@@@Validation of TTML Profiles@@@...";
fil["317"]= "validation-requirements.html@@@Validation Requirements@@@...";
fil["318"]= "xmlpaper.html@@@XMLPaper: XML-based Conference Paper Workflow@@@Popular conference management systems are monolithic solutions that are used across many fields and by very diverse audiences. As a result, these systems have rigid technology choices for paper format: PDF, TeX or Word which have limitations compared to a structured format such as XML. In addition, they do not cover all the steps in the paper submission lifecycle such as: collaboration between authors. We propose a new solution for conference paper submission management that tries to improve the user experience in several areas: authors tooling setup, collaboration between authors, multi-step review processes, multi-format proceedings publishing. This paper will present a typical conference paper submission workflow and identify its steps, the stakeholders and the tools and technologies used. We will then present how our solution improves user experience of each of the stakeholders. In this solution, the documents are authored in the an XML format, that supports publishing both as PDF and web portal. The output format is customizable and clearly communicated to authors so that they can preview how the paper will be published. Authors have a very intuitive user interface to draft the paper and to collaborate in cases where a paper has multiple authors. Reviewers can choose to review either the published PDF or directly on the source. In case of multi-round reviews, they can see the changes made between different revisions, thus being able to focus on the last updates. From a technical point of view, the solution is composed from off-the-shelf Web services with a thin layer of orchestration. It may to be used together with a regular Conference Management System, replacing parts of its functionality. To conclude the paper, we analyze how this solution is similar with other workflows related to content creation in a company, such as creating release notes or datasheets for a product...";
var doStem = false;searchLoaded = true;